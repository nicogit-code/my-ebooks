{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\ebooks-react-booksy\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _defineProperty from\"D:\\\\ebooks-react-booksy\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\ebooks-react-booksy\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"D:\\\\ebooks-react-booksy\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:\\\\ebooks-react-booksy\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useContext}from'react';import axios from'axios';import UserContext from'./UserContext';import{Switch,Redirect}from'react-router-dom';import styles from'./Register.module.css';var errorMessages={'username':'Please choose a username','password':'Please choose a password','retype-password':'Please retype password','different-passwords':'You must enter the same password twice','no-numbers':'Your username connot contain special characters','email':'This email is already in use. Login or try a different email adress'};function Register(){var _useState=useState({'username':'','email':'','password':'','retype-password':''}),_useState2=_slicedToArray(_useState,2),formData=_useState2[0],setFormData=_useState2[1];var _useState3=useState({'username':'','email':'','password':'','retype-password':'','different-passwords':''}),_useState4=_slicedToArray(_useState3,2),formError=_useState4[0],setFormError=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),globalErrorMessage=_useState6[0],setGlobalError=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isSuccessfull=_useState8[0],setSuccessfull=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),isFilled=_useState10[0],setFilled=_useState10[1];var _useContext=useContext(UserContext),setUser=_useContext.setUser;function handleSubmit(_x){return _handleSubmit.apply(this,arguments);}function _handleSubmit(){_handleSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var isInvalid,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();setGlobalError('');_context.t0=validateData();if(_context.t0){_context.next=7;break;}_context.next=6;return checkUser();case 6:_context.t0=_context.sent;case 7:isInvalid=_context.t0;if(isInvalid){_context.next=23;break;}setFilled(false);_context.prev=10;_context.next=13;return axios.post('/users',formData);case 13:res=_context.sent;console.log(res);setUser(res.data);localStorage.setItem('user',JSON.stringify(res.data));setSuccessfull(true);_context.next=23;break;case 20:_context.prev=20;_context.t1=_context[\"catch\"](10);console.log(_context.t1.res.data.message,res);case 23:case\"end\":return _context.stop();}}},_callee,null,[[10,20]]);}));return _handleSubmit.apply(this,arguments);}function checkUser(_x2){return _checkUser.apply(this,arguments);}function _checkUser(){_checkUser=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e){var user;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return axios.get('/users?username='+formData.username).then(function(res){return res.data;});case 2:user=_context2.sent;if(!user.length){_context2.next=6;break;}setGlobalError(\"User already exists\");return _context2.abrupt(\"return\",true);case 6:return _context2.abrupt(\"return\",false);case 7:case\"end\":return _context2.stop();}}},_callee2);}));return _checkUser.apply(this,arguments);}function validateData(){var inputs=['username','email','password','retype-password'];var newError=_objectSpread({},formError);var isInvalid=false;for(var _i=0,_inputs=inputs;_i<_inputs.length;_i++){var input=_inputs[_i];if(!formData[input]){newError[input]=errorMessages[input];isInvalid=true;}}if(!/^[a-zA-Z0-9]+$/i.test(formData.username)){newError.username=errorMessages['no-numbers'];isInvalid=true;}if(formData.password!==formData['retype-password']){newError['different-passwords']=errorMessages['different-passwords'];isInvalid=true;}setFormError(newError);return isInvalid;}function handleInputChange(e){setFilled(true);setFormData(_objectSpread({},formData,_defineProperty({},e.currentTarget.id,e.currentTarget.value)));var newError=_objectSpread({},formError,_defineProperty({},e.currentTarget.id,''));if(e.currentTarget.id==='password'||e.currentTarget.id==='retype-password'){newError['different-passwords']='';}setFormError(newError);}return/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"div\",{className:styles.formBody},/*#__PURE__*/React.createElement(\"h1\",null,\"Creare cont\"),globalErrorMessage?/*#__PURE__*/React.createElement(\"div\",{className:\"alert alert-danger\",role:\"alert\"},globalErrorMessage):null,isSuccessfull?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"alert alert-success\",role:\"alert\"},\"Contul tau a fost creat cu succes!\"),/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(Redirect,{from:\"/register\",to:\"/\"}))):null,/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"username\"}),/*#__PURE__*/React.createElement(\"input\",{onChange:handleInputChange,value:formData.username,type:\"text\",className:'form-control'+(formError.username?' is-invalid':''),id:\"username\",placeholder:\"Enter username\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"invalid-feedback\"},formError.username)),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"email\"}),/*#__PURE__*/React.createElement(\"input\",{onChange:handleInputChange,value:formData.email,type:\"text\",className:'form-control'+(formError.email?' is-invalid':''),id:\"email\",placeholder:\"email@example.com\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"invalid-feedback\"},formError.email)),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"password\"}),/*#__PURE__*/React.createElement(\"input\",{onChange:handleInputChange,value:formData.password,type:\"password\",className:'form-control'+(formError.password?' is-invalid':''),id:\"password\",placeholder:\"Password\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"invalid-feedback\"},formError.password)),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"retype-password\"}),/*#__PURE__*/React.createElement(\"input\",{onChange:handleInputChange,value:formData['retype-password'],type:\"password\",className:'form-control'+(formError['retype-password']||formError['different-passwords']?' is-invalid':''),id:\"retype-password\",placeholder:\"Retype Password\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"invalid-feedback\"},formError['retype-password'],formError['retype-password']?/*#__PURE__*/React.createElement(\"br\",null):'',formError['different-passwords'])),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\",className:styles.button,disabled:!isFilled},\"Register\"))));}export default Register;","map":{"version":3,"sources":["D:/ebooks-react-booksy/src/components/auth/Register.js"],"names":["React","useState","useContext","axios","UserContext","Switch","Redirect","styles","errorMessages","Register","formData","setFormData","formError","setFormError","globalErrorMessage","setGlobalError","isSuccessfull","setSuccessfull","isFilled","setFilled","setUser","handleSubmit","e","preventDefault","validateData","checkUser","isInvalid","post","res","console","log","data","localStorage","setItem","JSON","stringify","message","get","username","then","user","length","inputs","newError","input","test","password","handleInputChange","currentTarget","id","value","formBody","email","button"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport UserContext from './UserContext';\r\nimport { Switch, Redirect } from 'react-router-dom';\r\n\r\nimport styles from './Register.module.css';\r\n\r\n\r\nconst errorMessages = {\r\n    'username':'Please choose a username',\r\n    'password':'Please choose a password',\r\n    'retype-password':'Please retype password',\r\n    'different-passwords': 'You must enter the same password twice',\r\n    'no-numbers': 'Your username connot contain special characters',\r\n    'email':'This email is already in use. Login or try a different email adress',\r\n};\r\n\r\nfunction Register() {\r\n    const [formData, setFormData] = useState({\r\n        'username':'',\r\n        'email':'',\r\n        'password':'',\r\n        'retype-password':''\r\n    });\r\n\r\n    const [formError, setFormError] = useState({\r\n        'username':'',\r\n        'email':'',\r\n        'password':'',\r\n        'retype-password':'',\r\n        'different-passwords':''\r\n    });\r\n\r\n    const [globalErrorMessage, setGlobalError] = useState('');\r\n    const[isSuccessfull, setSuccessfull] = useState(false);\r\n    const[isFilled, setFilled] = useState(false);\r\n    const { setUser } = useContext(UserContext);\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault(); \r\n\r\n        setGlobalError('');\r\n        \r\n        const isInvalid = validateData() || await checkUser();\r\n\r\n        if(!isInvalid) {\r\n            setFilled(false);\r\n            let res;\r\n            try {\r\n            // res = await axios.post('http://localhost:3001/users', formData);\r\n            res = await axios.post('/users', formData);\r\n                console.log(res);\r\n                setUser(res.data);\r\n                localStorage.setItem('user', JSON.stringify(res.data));\r\n                setSuccessfull(true);\r\n            } catch(e) {\r\n                console.log(e.res.data.message, res);\r\n            }\r\n        }\r\n    }\r\n\r\n    async function checkUser(e) {\r\n        const user = await axios.get('/users?username=' + formData.username)\r\n                                .then(res => res.data)\r\n        if(user.length) {\r\n            setGlobalError(\"User already exists\");\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function validateData() {\r\n        const inputs = ['username', 'email', 'password', 'retype-password'];\r\n        const newError = { ...formError };\r\n        let isInvalid = false;\r\n\r\n        for(const input of inputs) {\r\n            if(!formData[input]) {\r\n                newError[input] = errorMessages[input];\r\n                isInvalid = true;\r\n            }\r\n        }\r\n\r\n        if(!/^[a-zA-Z0-9]+$/i.test(formData.username)) {\r\n            newError.username = errorMessages['no-numbers'];\r\n            isInvalid = true;\r\n        }\r\n\r\n        if(formData.password !== formData['retype-password']) {\r\n            newError['different-passwords'] = errorMessages['different-passwords'];\r\n            isInvalid = true;\r\n        }\r\n\r\n        \r\n\r\n        setFormError(newError);\r\n        return isInvalid;\r\n    }\r\n\r\n    function handleInputChange(e) {\r\n\r\n        setFilled(true);\r\n\r\n        setFormData({\r\n            ...formData,\r\n            [e.currentTarget.id]: e.currentTarget.value\r\n        });\r\n\r\n        const newError = { ...formError, [e.currentTarget.id]:'',};\r\n        if(e.currentTarget.id === 'password' || e.currentTarget.id === 'retype-password') {\r\n            newError['different-passwords'] = '';\r\n        }\r\n\r\n        setFormError(newError)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className={ styles.formBody }>\r\n                <h1>Creare cont</h1>\r\n\r\n                {(globalErrorMessage ?\r\n                    <div className=\"alert alert-danger\" role=\"alert\">\r\n                        { globalErrorMessage }\r\n                    </div>\r\n                : null)}\r\n\r\n                {(isSuccessfull ?\r\n                <>\r\n                    <div className=\"alert alert-success\" role=\"alert\">\r\n                        Contul tau a fost creat cu succes!\r\n                    </div>\r\n                    <Switch>\r\n                        {/* <Route path='/login' component={UserProfile}/> */}\r\n                        <Redirect from='/register' to ='/'/>\r\n                    </Switch>\r\n                </>\r\n                : null)}\r\n\r\n                <form onSubmit={ handleSubmit }>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"username\"></label>\r\n                        <input \r\n                        onChange={ handleInputChange } \r\n                        value={ formData.username } \r\n                        type=\"text\" \r\n                        className={'form-control' + (formError.username ? ' is-invalid' : '')} \r\n                        id=\"username\" \r\n                        placeholder=\"Enter username\"\r\n                        />\r\n                        <div className=\"invalid-feedback\">\r\n                            { formError.username }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\"></label>\r\n                        <input \r\n                        onChange={ handleInputChange } \r\n                        value={ formData.email } \r\n                        type=\"text\" \r\n                        className={'form-control' + (formError.email ? ' is-invalid' : '')} \r\n                        id=\"email\" \r\n                        placeholder=\"email@example.com\"\r\n                        />\r\n                        <div className=\"invalid-feedback\">\r\n                            { formError.email }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\"></label>\r\n                        <input \r\n                        onChange={ handleInputChange } \r\n                        value={ formData.password } \r\n                        type=\"password\" \r\n                        className={'form-control' + (formError.password ? ' is-invalid' : '')}  \r\n                        id=\"password\"\r\n                        placeholder=\"Password\"\r\n                        />\r\n                        <div className=\"invalid-feedback\">\r\n                            { formError.password }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"retype-password\"></label>\r\n                        <input \r\n                        onChange={ handleInputChange } \r\n                        value={ formData['retype-password'] } \r\n                        type=\"password\" \r\n                        className={'form-control' + (formError['retype-password'] || formError['different-passwords'] ? ' is-invalid' : '')} \r\n                        id=\"retype-password\"\r\n                        placeholder=\"Retype Password\"\r\n                        />\r\n                        <div className=\"invalid-feedback\">\r\n                            { formError['retype-password'] }\r\n                            { formError['retype-password'] ? <br/> : '' }\r\n                            { formError['different-passwords'] }\r\n                        </div>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" className={ styles.button } disabled={ !isFilled }>Register</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}