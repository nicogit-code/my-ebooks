{"ast":null,"code":"var _jsxFileName = \"D:\\\\ebooks-react-booksy\\\\src\\\\components\\\\dictionary\\\\Dictionary.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { apiDict } from '../../api/DictApi';\nimport styles from './Dictionary.module.css';\n\nfunction Dictionary() {\n  // const url = 'https://wordsapiv1.p.rapidapi.com/words/';\n  const apiKey = 'ffe7b2bb45msh4ee307b5ab28997p1dfb68jsn8ad031d2a5e4';\n  const definitionList = document.getElementById(\"definitions\"); // const fetchData = async() => {\n  //     try {\n  //         const res = await axios.get(url);\n  //         console.log(res);\n  //     } catch(e) {\n  //     }\n  // }\n\n  function getDefinitions(word) {\n    fetch(\"https://wordsapiv1.p.rapidapi.com/words/?page=1&hasDetails=hasDetails\", {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"wordsapiv1.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"ffe7b2bb45msh4ee307b5ab28997p1dfb68jsn8ad031d2a5e4\"\n      }\n    }).then(response => {\n      console.log(response);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  function getSuggestions(input) {\n    const url = `https://wordsapiv1.p.rapidapi.com/words/?letterPattern=^${input}.*&hasDetails=definitions`;\n    return fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-RapidAPI-Key\": apiKey\n      }\n    }).then(resp => resp.json());\n  }\n  /*\r\n   * Get the definition of a word.\r\n   */\n\n\n  function getDefinitions(term) {\n    const url = `https://wordsapiv1.p.rapidapi.com/words/${term}`;\n    return fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"X-RapidAPI-Key\": apiKey\n      }\n    }).then(resp => resp.json()).then(resp => {\n      return resp.results;\n    });\n  }\n\n  function showDefinitions(definitions) {\n    definitionList.innerHTML = \"\";\n    definitions.forEach(definition => {\n      const li = document.createElement(\"li\");\n      li.textContent = `${definition.partOfSpeech} - ${definition.definition}`;\n      definitionList.appendChild(li);\n    });\n  } //   autoComplete({\n  //     selector: \"#user-input\",\n  //     minChars: 1,\n  //     source: function(term, suggest) {\n  //       getSuggestions(term).then(response => {\n  //         suggest(response.results.data);\n  //       });\n  //     },\n  //     onSelect: function(e, term, item) {\n  //       getDefinitions(term).then(showDefinitions);\n  //     }\n  //   });\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.form,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row justify-content-center align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"word-search\",\n    className: \"col-md-7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }\n  }, \"Book-tionary\"), /*#__PURE__*/React.createElement(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, \"Comprehensive Word Information\"))), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"form-row\",\n    className: \"row sticky-top\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    id: \"main-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"word\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 33\n    }\n  }, \"Enter Word\"), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"word-input\",\n    type: \"text\",\n    className: \"form-control\",\n    name: \"word\",\n    placeholder: \"abibliophobia\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 33\n    }\n  }, \"Cauta\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    id: \"word-info\",\n    className: \"list-unstyled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  })))));\n}\n\nexport default Dictionary;","map":{"version":3,"sources":["D:/ebooks-react-booksy/src/components/dictionary/Dictionary.js"],"names":["React","axios","apiDict","styles","Dictionary","apiKey","definitionList","document","getElementById","getDefinitions","word","fetch","then","response","console","log","catch","e","getSuggestions","input","url","method","headers","resp","json","term","results","showDefinitions","definitions","innerHTML","forEach","definition","li","createElement","textContent","partOfSpeech","appendChild","form","button"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { apiDict } from '../../api/DictApi';\r\nimport styles from './Dictionary.module.css'\r\n\r\nfunction Dictionary() {\r\n    // const url = 'https://wordsapiv1.p.rapidapi.com/words/';\r\n    const apiKey = 'ffe7b2bb45msh4ee307b5ab28997p1dfb68jsn8ad031d2a5e4';\r\n    const definitionList = document.getElementById(\"definitions\");\r\n    // const fetchData = async() => {\r\n    //     try {\r\n    //         const res = await axios.get(url);\r\n\r\n    //         console.log(res);\r\n    //     } catch(e) {\r\n\r\n    //     }\r\n    // }\r\n\r\n    function getDefinitions(word) {\r\n        fetch(\"https://wordsapiv1.p.rapidapi.com/words/?page=1&hasDetails=hasDetails\", {\r\n\t        \"method\": \"GET\",\r\n\t        \"headers\": {\r\n\t\t    \"x-rapidapi-host\": \"wordsapiv1.p.rapidapi.com\",\r\n\t\t    \"x-rapidapi-key\": \"ffe7b2bb45msh4ee307b5ab28997p1dfb68jsn8ad031d2a5e4\"\r\n\t}\r\n})\r\n        .then(response => {\r\n            console.log(response);\r\n        })\r\n        .catch(e => {\r\n            console.log(e);\r\n        });\r\n    } \r\n\r\n    function getSuggestions(input) {\r\n        const url = `https://wordsapiv1.p.rapidapi.com/words/?letterPattern=^${input}.*&hasDetails=definitions`;\r\n        return fetch(url, {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"X-RapidAPI-Key\": apiKey\r\n          }\r\n        }).then(resp => resp.json());\r\n      }\r\n      \r\n      /*\r\n       * Get the definition of a word.\r\n       */\r\n      function getDefinitions(term) {\r\n        const url = `https://wordsapiv1.p.rapidapi.com/words/${term}`;\r\n        return fetch(url, {\r\n          method: \"GET\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"X-RapidAPI-Key\": apiKey\r\n          }\r\n        })\r\n          .then(resp => resp.json())\r\n          .then(resp => {\r\n            return resp.results;\r\n          });\r\n      }\r\n      \r\n\r\n      function showDefinitions(definitions) {\r\n        definitionList.innerHTML = \"\";\r\n        definitions.forEach(definition => {\r\n          const li = document.createElement(\"li\");\r\n          li.textContent = `${definition.partOfSpeech} - ${definition.definition}`;\r\n          definitionList.appendChild(li);\r\n        });\r\n      }\r\n      \r\n    //   autoComplete({\r\n    //     selector: \"#user-input\",\r\n    //     minChars: 1,\r\n    //     source: function(term, suggest) {\r\n    //       getSuggestions(term).then(response => {\r\n    //         suggest(response.results.data);\r\n    //       });\r\n    //     },\r\n    //     onSelect: function(e, term, item) {\r\n    //       getDefinitions(term).then(showDefinitions);\r\n    //     }\r\n    //   });\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={ styles.form }>\r\n                <div className=\"row justify-content-center align-items-center\">\r\n                    <div id=\"word-search\" className=\"col-md-7\">\r\n                        <h3>Book-tionary</h3>\r\n                        <h5>Comprehensive Word Information</h5>\r\n                        {/* <h6 className=\"text-center\">Get information on different words</h6> */}\r\n                    </div>\r\n                </div>\r\n                <div id=\"form-row\" className=\"row sticky-top\">\r\n                    <div className=\"col\">\r\n                        <form id=\"main-form\">\r\n                            <fieldset>\r\n                                <label htmlFor=\"word\">Enter Word</label>\r\n                                <input id='word-input' type=\"text\" className={\"form-control\"} name=\"word\" placeholder=\"abibliophobia\"/>\r\n                                <button type=\"submit\" className={ styles.button }>Cauta</button>\r\n                            </fieldset>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-md-10\">\r\n                        <ul id=\"word-info\" className=\"list-unstyled\"></ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dictionary;\r\n"]},"metadata":{},"sourceType":"module"}